@model IEnumerable<KarmaWebMVC.Models.Product>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<h1>Products List</h1>

<p>
    <a asp-action="Create" class="btn btn-primary btn-sm">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductImage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductQuantity)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Brand)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Size)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    <img src="@Url.Content(item.ProductImage)" alt="Product Image" style="max-width: 100px; max-height: 100px;" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductDescription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductPrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductQuantity)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Category.CategoryDescription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Brand.BrandDescription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Size.SizeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductStatus.StatusName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ProductId" class="btn btn-warning btn-sm" style="margin-bottom: 5px;">Edit</a>
                    <a asp-action="Details" asp-route-id="@item.ProductId" class="btn btn-info btn-sm" style="margin-bottom: 5px;">Details</a>
                    <a asp-action="Delete" asp-route-id="@item.ProductId" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete this item?');">Delete</a>
                    
                </td>
            </tr>
        }
    </tbody>
</table>
<!-- Thêm phân trang -->
<div class="pagination">
    @if (ViewData["CurrentPage"] != null && ViewData["TotalPages"] != null)
    {
        int currentPage = (int)ViewData["CurrentPage"];
        int totalPages = (int)ViewData["TotalPages"];

        if (currentPage > 1)
        {
            <a asp-action="Index" asp-route-pageNumber="@(currentPage - 1)" class="btn btn-secondary btn-sm">Previous</a>
        }

        <span>Page @currentPage of @totalPages</span>

        if (currentPage < totalPages)
        {
            <a asp-action="Index" asp-route-pageNumber="@(currentPage + 1)" class="btn btn-secondary btn-sm">Next</a>
        }
    }
</div>